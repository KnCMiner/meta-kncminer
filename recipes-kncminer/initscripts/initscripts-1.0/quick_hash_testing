#!/bin/sh

set -e

DEFAULT_MHZ_FOR_TEST=200

reset_die() {
	lchannel=$1
	ldie=$2
	lbus=$((lchannel+3))
	ldcdc1=$((ldie*2))
	ldcdc2=$((ldcdc1+1))

	# pmbus off
	i2cset -y $lbus 0x1$ldcdc1 0x01 0x00 >/dev/null 2>&1
	usleep 100000
	i2cset -y $lbus 0x1$ldcdc2 0x01 0x00 >/dev/null 2>&1
	usleep 100000

	# clear errors
	i2cset -y $lbus 0x1$ldcdc1 0x03 >/dev/null 2>&1
	usleep 100000
	i2cset -y $lbus 0x1$ldcdc2 0x03 >/dev/null 2>&1
	usleep 100000

	# pmbus on
	i2cset -y $lbus 0x1$ldcdc1 0x01 0x80 >/dev/null 2>&1
	usleep 100000
	i2cset -y $lbus 0x1$ldcdc2 0x01 0x80 >/dev/null 2>&1
	usleep 100000

	# Restart die
	asic $lchannel $ldie freq $DEFAULT_MHZ_FOR_TEST >/dev/null 2>&1
	usleep 100000
}

asic=${1:-1}
die=${2:-0}
core=${3:-0}

reset_die $asic $die >/dev/null 2>&1
asic $asic $die setwork $core 10 1 90f741afb3ab06f1a582c5c85ee7a561912b25a7cd09c060a89b3c2a73a48e22 1571d1be4de695931a269421 >/dev/null 2>&1
secs=0
while true; do
	sleep 1
	state=$(asic $asic $die report $core 2>/dev/null | awk '/Current[[:space:]]*:[[:space:]]*0xa/ {print $4}')
	if [ "$state" != "HASHING" ] ; then
		break
	fi
	secs=$((secs + 1))
	if [ $secs -gt 30 ] ; then
		break
	fi
done

# TODO: check result
asic $asic $die report $core 2>/dev/null | grep 'Nonce[[:space:]]\+0[[:space:]]\+:[[:space:]]\+0xa[[:space:]]\+acbba77f'
asic $asic $die report $core 2>/dev/null | grep 'Nonce[[:space:]]\+1[[:space:]]\+:[[:space:]]\+0xa[[:space:]]\+9ccdef20'
asic $asic $die report $core 2>/dev/null | grep 'Nonce[[:space:]]\+2[[:space:]]\+:[[:space:]]\+0xa[[:space:]]\+0e33337a'