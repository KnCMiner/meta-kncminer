#!/bin/sh

factory_reset_mode()
{
	if [ -f /config/factory-test ]; then
		return 0
	fi
	if [ -f /config/network.conf ]; then
		return 1
	fi
	if [ -f /config/cgminer.conf ]; then
		return 1
	fi
	return 0
}

if ! factory_reset_mode; then
	exit 0
fi

. /etc/revision
SERIAL_BB=`knc-serial -b`
SERIAL_IO=`knc-serial -i`
SERIAL0=`knc-serial -a0`
SERIAL1=`knc-serial -a1`
SERIAL2=`knc-serial -a2`
SERIAL3=`knc-serial -a3`
SERIAL4=`knc-serial -a4`
SERIAL5=`knc-serial -a5`

neptune=0
jupiter=0
board() {
	case "$1" in
	N*)
		neptune=$((neptune + 1))
		;;
	A*|B*)
		jupiter=$((jupiter + 1))
		;;
	esac
}

board $BOARD0
board $BOARD1
board $BOARD2
board $BOARD3
board $BOARD4
board $BOARD5

show_boards()
{
	lcd-message -l 2 `echo $BOARD0$BOARD1$BOARD2$BOARD3$BOARD4$BOARD5 | sed -e 's/OFF/__/g'`
}

model=Alien-$neptune.$jupiter
case $neptune.$jupiter in
0.0)	model=EmptySpace
	;;
0.2)
	model=Saturn
	;;
0.4)
	model=Jupiter
	;;
5.0)
	model=Neptune
	;;
1.0)
	model=Neptune1
	;;
*)
	show_boards
esac

installed_release=`cat /etc/knc-release`
check_release=`curl -s -f http://192.168.100.1/install/$model.release`
if [ -z "$check_release" ]; then
	check_release=`curl -s -f http://192.168.100.1/install.release`
fi

if [ -n "$check_release" ] && [ "$check_release" != "$installed_release" ]; then
	lcd-message Upgrade needed
	rm -rf /tmp/install
	mkdir /tmp/install
	cd /tmp/install
	curl http://192.168.100.1/install/$check_release.bin | tar zxvf -
	lcd-message Upgrading..
	if ./runme.sh; then
		reboot.safe
	fi
	lcd-message Failed upgrade
	exit 1
fi

if [ -z "$check_release" ]; then
	echo "NOTICE: no upgrade server found"
else
	echo "Software up to date"
fi

lcd-message "$model"

cgminer_conf() {
cat << EOF
{
  "pools": [
    {
      "quota": "1;$cf_miningpool",
      "user": "$cf_workerid",
      "pass": "$cf_workerpass"
    }
  ],
  "api-allow": "W:0/0"
}
EOF
}

do_configure()
{
	cgminer_conf > /config/cgminer.conf
	lcd-message -l 1 Configured
	lcd-message -l 2 $cf_shipmentid
	sync
	arg="done=1"
	for cf in `cat /config/factory.conf | sed -e 's/^cf_//' -e 's/=.*//'`; do
		eval "value=\"\$cf_$cf\""
		arg="${arg}&$cf=$value"
	done
	curl -s "http://192.168.100.1:8080/done?serialno=$SERIAL_IO&shipmentid=$cf_shipmentid"
}

while factory_reset_mode; do
	curl -s "http://192.168.100.1:8080/getconfig?serialno=$SERIAL_IO&serialbb=$SERIAL_BB&model=$model&asic1=$SERIAL0&asic2=$SERIAL1&asic3=$SERIAL2&asic4=$SERIAL3&asic5=$SERIAL4&asic6=$SERIAL5" | sed -e 's/^{//' -e 's/^}//' -e 's/^ *"/cf_/' -e 's/, *$//' -e 's/": /=/' > /config/factory.conf
	cat /config/factory.conf
	. /config/factory.conf
	case "$cf_status" in
	configuring)
		do_configure
		;;
	connected)
		lcd-message "Waiting.."
		;;
	""|error)
		lcd-message -l 2 "$cf_error"
		sleep 1
		show_boards
		;;
	esac
	sleep 1
done

