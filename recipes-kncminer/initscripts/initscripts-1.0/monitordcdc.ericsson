#!/bin/sh

LOG_FILE="/var/log/monitordcdc.log"

INTERVAL=5
THRESHOLD=3
IOUT_THRESHOLD_AMPS=5
DEFAULT_MHZ=475

while [ ! -f /config/cgminer.conf ]; do
	sleep 1
done

echo [$(date +"%F %T")] Start >> $LOG_FILE

reset_die() {
	lchannel=$1
	ldie=$2
	lbus=$((lchannel+3))
	ldcdc1=$((ldie*2))
	ldcdc2=$((ldcdc1+1))

	# pmbus off
	i2cset -y $lbus 0x1$ldcdc1 0x01 0x00 >/dev/null 2>&1
	usleep 100000
	i2cset -y $lbus 0x1$ldcdc2 0x01 0x00 >/dev/null 2>&1
	usleep 100000

	# clear errors
	i2cset -y $lbus 0x1$ldcdc1 0x03 >/dev/null 2>&1
	usleep 100000
	i2cset -y $lbus 0x1$ldcdc2 0x03 >/dev/null 2>&1
	usleep 100000

	# pmbus on
	i2cset -y $lbus 0x1$ldcdc1 0x01 0x80 >/dev/null 2>&1
	usleep 100000
	i2cset -y $lbus 0x1$ldcdc2 0x01 0x80 >/dev/null 2>&1
	usleep 100000

	# Restart die
	freqs_waas="$(cat /var/run/.waas_curfreq 2>/dev/null)"
	freqs="$freqs_waas $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ $DEFAULT_MHZ"
	i=0
	num=$(( lchannel*4 + ldie ))
	for freq in $freqs ; do
		if [ $i -eq $num ]; then
			break
		fi
		i=$(( i + 1 ))
	done
	if [ $freq -le 0 ]; then
		freq=$DEFAULT_MHZ
	fi
	echo [$(date +"%F %T")] asic freq $lchannel $ldie $freq >> $LOG_FILE
	asic freq $lchannel $ldie $freq >/dev/null 2>&1
	usleep 100000

	echo [$(date +"%F %T")] Die $lchannel-$ldie restarted >> $LOG_FILE
}

detect_dcdcs() {
	lchannel=$1
	ldie=$2
	lbus=$((lchannel+3))
	ldcdc1=$((ldie*2))
	ldcdc2=$((ldcdc1+1))

	i2cget -y $lbus 0x1$ldcdc1 >/dev/null 2>&1
	ldcdc1_present=$?
	i2cget -y $lbus 0x1$ldcdc2 >/dev/null 2>&1
	ldcdc2_present=$?

	if [[ "x${ldcdc1_present}" = "x0" -o "x${ldcdc2_present}" = "x0" ]] ; then
		echo 0
	else
		# If the die answers, then DC/DCs are alive and provide power
		asic info $lchannel $ldie >/dev/null 2>&1
		echo $?
	fi
}

iout_dcdc() {
	lbus=$1
	ldcdc=$2

	ltemp=$(i2cget -y $lbus 0x1$ldcdc 0x8c w 2>/dev/null)
	lexp=$(( 2**(32 - ((ltemp >> 11) & 0x1F)) ))
	lmant=$(( ltemp & 0x7FF ))
	if [ $lexp -gt 0 ] ; then
		iout=$((lmant/lexp))
	else
		iout=0
	fi
}

for channel in 0 1 2 3 4 5 ; do
	bus=$((channel+3))
	# Try detect EEPROM
	dd if=/sys/bus/i2c/devices/${bus}-0050/eeprom of=/dev/null bs=1 count=1 1>/dev/null 2>&1
	if [[ "$?" = "0" ]] ; then
		good=1
	else
		good=0
	fi
	for q in 0 1 2 3 ; do
		if [ "x$good" != "x1" ] ; then
			echo 1000 > /var/run/die${channel}${q}
		else
			detected=$(detect_dcdcs $channel $q)
			if [[ "x${detected}" = "x0" ]] ; then
				echo 0 > /var/run/die${channel}${q}
			else
				echo 1000 > /var/run/die${channel}${q}
			fi
		fi
	done

	# Give them a kick!
	reset_die $channel 0
	reset_die $channel 1
	reset_die $channel 2
	reset_die $channel 3
done
echo 0 > /var/run/tm

while true; do
	hardware_changed=
	cgminer_cmds=
	for channel in 0 1 2 3 4 5; do
		bus=$((channel+3))
		asic=$((channel+1))

		# Try detect EEPROM
		asic_present=
		dd if=/sys/bus/i2c/devices/${bus}-0050/eeprom of=/dev/null bs=1 count=1 1>/dev/null 2>&1
		if [[ "$?" = "0" ]] ; then
			asic_present=1
		fi

		if [[ ${asic_present} ]] ; then
			for q in 0 1 2 3; do
				cnt=$(cat /var/run/die${channel}${q} 2>/dev/null)
				if [ -z "$cnt" ] ; then
					cnt=0
				fi
				detected=$(detect_dcdcs $channel $q)
				if [ $cnt -ge 1000 ] ; then
					if [[ "x${detected}" = "x0" ]] ; then
						echo 0 > /var/run/die${channel}${q}
						hardware_changed=1
						echo [$(date +"%F %T")] Die $channel-$q came UP >> $LOG_FILE
						cgminer_cmds="$cgminer_cmds knc-configure-die|ASIC:${channel};DIE:${q};MODE:ENABLE;"
					fi
				else
					if [[ "x${detected}" != "x0" ]] ; then
						echo 1000 > /var/run/die${channel}${q}
						hardware_changed=1
						echo [$(date +"%F %T")] Die $channel-$q came DOWN >> $LOG_FILE
						cgminer_cmds="$cgminer_cmds knc-configure-die|ASIC:${channel};DIE:${q};MODE:DISABLE;"
					fi
				fi
			done
		else
			for q in 0 1 2 3; do
				cnt=$(cat /var/run/die${channel}${q} 2>/dev/null)
				if [ -z "$cnt" ] ; then
					cnt=0
				fi
				if [ $cnt -lt 1000 ] ; then
					echo 1000 > /var/run/die${channel}${q}
					hardware_changed=1
					echo [$(date +"%F %T")] Die $channel-$q came DOWN '(ASIC not present)' >> $LOG_FILE
				fi
			done
		fi

		for d in 0 1 2 3 4 5 6 7; do
			q=$((d/2))
                        cnt=$(cat /var/run/die${channel}${q} 2>/dev/null)
                        if [ -z "$cnt" ] ; then
                                cnt=0
                        fi
                        iout_dcdc $bus $d
			if [ $iout -lt $IOUT_THRESHOLD_AMPS ]; then
				cnt=$((cnt+1))
			fi
			echo $cnt > /var/run/die${channel}${q}
			sleep 1
		done
	done

	restart_cgminer=
	if [[ ${hardware_changed} ]] ; then
		waas -c /config/advanced.conf >/dev/null 2>&1
		echo [$(date +"%F %T")] waas re-run >> $LOG_FILE
		for cmd in $cgminer_cmds ; do
			echo $cmd | timeout -t 15 nc localhost 4028 2>/dev/null >> $LOG_FILE
			if [[ $? -gt 100 ]] ; then
				# Timeout; cgminer hangs, restart it
				restart_cgminer=1
				break
			fi
			echo >> $LOG_FILE
		done
		if [[ ${restart_cgminer} ]] ; then
			echo [$(date +"%F %T")] Restarting cgminer >> $LOG_FILE
			/etc/init.d/cgminer.sh restart
		fi
	fi

	tm=$(cat /var/run/tm 2>/dev/null)
	if [ -z "$tm" ] ; then
		tm=0
	fi
	tm=$((tm+1))
	if [ $tm -lt $INTERVAL ] ; then
		echo $tm > /var/run/tm
		sleep 4
		continue
	fi
	echo 0 > /var/run/tm

	for channel in 0 1 2 3 4 5; do
		bus=$((channel+3))
		failed0=0
		failed1=0
		failed2=0
		failed3=0
		for q in 0 1 2 3; do
                        cnt=$(cat /var/run/die${channel}${q} 2>/dev/null)
                        if [ -z "$cnt" ] ; then
                                cnt=0
                        fi
                        if [ $cnt -ge 1000 ] ; then
				echo 1000 > /var/run/die${channel}${q}
				continue
                        fi
			echo 0 > /var/run/die${channel}${q}
                        if [ $cnt -le $THRESHOLD ] ; then
				continue
                        fi
                        d=$((q*2))
                        d1=$((d+1))
                        bad_iout=0
                        iout_dcdc $bus $d
			if [ $iout -lt $IOUT_THRESHOLD_AMPS ]; then
	                        bad_iout=1
			fi
                        iout_dcdc $bus $d1
			if [ $iout -lt $IOUT_THRESHOLD_AMPS ]; then
	                        bad_iout=1
			fi
			if [ "$bad_iout" = "0" ]; then
				continue
			fi
			# Die failed
			if [ "$q" = "0" ] ; then
				failed0=1
			fi
			if [ "$q" = "1" ] ; then
				failed1=1
			fi
			if [ "$q" = "2" ] ; then
				failed2=1
			fi
			if [ "$q" = "3" ] ; then
				failed3=1
			fi
		done
		# restart die
		if [ "$failed0" = "1" ] ; then
			reset_die $channel 0
		fi
		if [ "$failed1" = "1" ] ; then
			reset_die $channel 1
		fi
		if [ "$failed2" = "1" ] ; then
			reset_die $channel 2
		fi
		if [ "$failed3" = "1" ] ; then
			reset_die $channel 3
		fi
	done

	sleep 4

	a="$(ps | grep cgminer | grep -v 'grep cgminer')"
	if [ -z "$a" ] ; then
		echo [$(date +"%F %T")] Restarting cgminer >> $LOG_FILE
		/etc/init.d/cgminer.sh restart
	fi
done
